{"version":3,"file":"index.mjs","sources":["../lib/cache.js","../lib/coefficients.js","../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar cache = {};\n\n\n// EXPORTS //\n\nmodule.exports = cache;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar binomcoef = require( '@stdlib/math-base-special-binomcoef' );\nvar cache = require( './cache.js' );\n\n\n// MAIN //\n\n/**\n* Computes polynomial coefficients.\n*\n* @private\n* @param {NonNegativeInteger} n - Fibonacci polynomial for which to compute coefficients\n* @returns {NonNegativeIntegerArray} polynomial coefficients\n*/\nfunction coefficients( n ) {\n\tvar coefs;\n\tvar i;\n\n\tcoefs = cache[ n ];\n\tif ( coefs === void 0 ) {\n\t\tcoefs = [];\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tcoefs.push( 0.0 );\n\t\t}\n\t\tfor ( i = n-1; i >= 0; i -= 2 ) {\n\t\t\tcoefs[ i ] = binomcoef( (n+i-1)/2, i );\n\t\t}\n\t\t// Memoize the coefficients:\n\t\tcache[ n ] = coefs;\n\t}\n\treturn coefs;\n}\n\n\n// EXPORTS //\n\nmodule.exports = coefficients;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( '@stdlib/math-base-tools-evalpoly' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar coefficients = require( './coefficients.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates a Fibonacci polynomial.\n*\n* @param {integer} n - Fibonacci polynomial to evaluate\n* @param {number} x - value at which to evaluate a Fibonacci polynomial\n* @returns {number} result\n*\n* @example\n* var v = fibpoly( 5, 1.0 );\n* // returns 5.0\n*/\nfunction fibpoly( n, x ) {\n\tvar coefs;\n\tvar an;\n\tvar v;\n\n\tan = abs( n );\n\tcoefs = coefficients( an );\n\n\tv = evalpoly( coefs, x );\n\tif ( n >= 0 ) {\n\t\treturn v;\n\t}\n\treturn pow( -1.0, an-1 ) * v;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fibpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( '@stdlib/math-base-tools-evalpoly' ).factory;\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar coefficients = require( './coefficients.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating a Fibonacci polynomial.\n*\n* @param {integer} n - Fibonacci polynomial to evaluate\n* @returns {Function} function for evaluating a Fibonacci polynomial\n*\n* @example\n* var fibpolyval = factory( 5 );\n*\n* var v = fibpolyval( 1.0 );\n* // returns 5.0\n*\n* v = fibpolyval( 2.0 );\n* // returns 29.0\n*/\nfunction factory( n ) {\n\tvar coefs;\n\tvar an;\n\tvar f;\n\tvar s;\n\n\tan = abs( n );\n\tcoefs = coefficients( an );\n\n\tf = evalpoly( coefs );\n\ts = pow( -1.0, an-1 );\n\tif ( n >= 0 || s === 1.0 ) {\n\t\treturn f;\n\t}\n\treturn polyval;\n\n\t/**\n\t* Evaluates a Fibonacci polynomial.\n\t*\n\t* @private\n\t* @param {number} x - value at which to evaluate a Fibonacci polynomial\n\t* @returns {number} result\n\t*/\n\tfunction polyval( x ) {\n\t\treturn -1.0 * f( x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate a Fibonacci polynomial.\n*\n* @module @stdlib/math-base-tools-fibpoly\n*\n* @example\n* var fibpoly = require( '@stdlib/math-base-tools-fibpoly' );\n*\n* var v = fibpoly( 5, 1.0 );\n* // returns 5.0\n*\n* @example\n* var factory = require( '@stdlib/math-base-tools-fibpoly' ).factory;\n*\n* var fibpolyval = factory( 5 );\n*\n* var v = fibpolyval( 1.0 );\n* // returns 5.0\n*\n* v = fibpolyval( 2.0 );\n* // returns 29.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar fibpoly = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( fibpoly, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = fibpoly;\n"],"names":["binomcoef","require$$0","cache","coefficients_1","n","coefs","i","push","evalpoly","pow","require$$1","abs","require$$2","coefficients","require$$3","main","x","an","v","factory","fibpoly","f","s","lib"],"mappings":";;8dAsBA,ICAIA,EAAYC,EACZC,EDDQ,GCmCZ,IAAAC,EAtBA,SAAuBC,GACtB,IAAIC,EACAC,EAGJ,QAAe,KADfD,EAAQH,EAAOE,IACS,CAEvB,IADAC,EAAQ,GACFC,EAAI,EAAGA,EAAIF,EAAGE,IACnBD,EAAME,KAAM,GAEb,IAAMD,EAAIF,EAAE,EAAGE,GAAK,EAAGA,GAAK,EAC3BD,EAAOC,GAAMN,GAAYI,EAAEE,EAAE,GAAG,EAAGA,GAGpCJ,EAAOE,GAAMC,EAEd,OAAOA,GC7BJG,EAAWP,EACXQ,EAAMC,EACNC,EAAMC,EACNC,EAAeC,EAkCnB,IAAAC,EAlBA,SAAkBX,EAAGY,GACpB,IAAIX,EACAY,EACAC,EAMJ,OAJAD,EAAKN,EAAKP,GACVC,EAAQQ,EAAcI,GAEtBC,EAAIV,EAAUH,EAAOW,GAChBZ,GAAK,EACFc,EAEDT,GAAM,EAAKQ,EAAG,GAAMC,GC/BxBV,EAAWP,EAA8CkB,QACzDV,EAAMC,EACNC,EAAMC,EACNC,EAAeC,EAmDnB,IC9BAM,EAAAV,EACAS,EDFA,SAAkBf,GACjB,IAAIC,EACAY,EACAI,EACAC,EAOJ,OALAL,EAAKN,EAAKP,GACVC,EAAQQ,EAAcI,GAEtBI,EAAIb,EAAUH,GACdiB,EAAIb,GAAM,EAAKQ,EAAG,GACbb,GAAK,GAAW,IAANkB,EACPD,EAWR,SAAkBL,GACjB,OAAQ,EAAMK,EAAGL,KCxBnBf,EAOAmB,EAAA,UAAAD,GAKA,IAAAI,EAAAH"}